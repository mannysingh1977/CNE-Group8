# name: Build and deploy Node.js project to Azure Function App - CNE-Group8-FunctionApp

# on:
#   push:
#     branches:
#       - main
#     paths:
#       - "back-end/**"
#   workflow_dispatch:

# env:
#   AZURE_FUNCTIONAPP_NAME: "CNE-Group8-FunctionApp"
#   AZURE_FUNCTIONAPP_PACKAGE_PATH: "."
#   NODE_VERSION: "20.x"

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#     defaults:
#       run:
#         working-directory: back-end

#     steps:
#       - name: "Checkout GitHub Action"
#         uses: actions/checkout@v4

#       - name: Setup Node ${{ env.NODE_VERSION }} Environment
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ env.NODE_VERSION }}

#       - name: "Resolve Project Dependencies Using Npm"
#         shell: bash
#         run: |
#           pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
#           npm install
#           npm run build --if-present
#           npm run test --if-present
#           popd

#       - name: Zip artifact for deployment
#         run: zip release.zip ./* -r

#       - name: Upload artifact for deployment job
#         uses: actions/upload-artifact@v4
#         with:
#           name: node-app
#           path: release.zip

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build

#     steps:
#       - name: Download artifact from build job
#         uses: actions/download-artifact@v4
#         with:
#           name: node-app

#       - name: Unzip artifact for deployment
#         run: unzip release.zip

#       - name: "Run Azure Functions Action"
#         uses: Azure/functions-action@v1
#         id: fa
#         with:
#           app-name: "CNE-Group8-FunctionApp"
#           slot-name: "Production"
#           package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
#           publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_CCDBD468876E455E834D3EAE8B886EBA }}

name: Build and deploy Node.js project to Azure Function App - CNE-Group8-FunctionApp

on:
  push:
    branches:
      - main
    paths:
      - "back-end/**"
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: "CNE-Group8-FunctionApp"
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "back-end"
  NODE_VERSION: "20.x"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cleanup old zip files
        run: |
          curl --verbose --location "https://team10-function-app-dpfncdcnaha0gjgv.scm.westeurope-01.azurewebsites.net/api/command" \
            --header "Content-Type: application/json" \
            --data "{\"command\": \"sh -c \\\"rm -f *.zip\\\"\", \"dir\": \"/home/data/SitePackages\"}" \
            -u "${{ secrets.FUNCTION_APP_KUDU_USERNAME }}:${{ secrets.FUNCTION_APP_KUDU_PASSWORD }}"



      - name: Install, Build, and Test
        working-directory: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Zip artifact for deployment
        run: |
          cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          zip -r ../release.zip .

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip -d package

      - name: "Run Azure Functions Action"
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          slot-name: "Production"
          package: package
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_CCDBD468876E455E834D3EAE8B886EBA }}
